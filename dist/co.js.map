{"version":3,"sources":["../src/co.js"],"names":["co","require","fetch","run","generator","iterator","it","next","promise","value","then","it2","data","promise2","data2","res","json","movie","summary","console","log"],"mappings":";;;;;;;;AAAA,IAAMA,KAAKC,QAAQ,IAAR,CAAX;AACA,IAAMC,QAAQD,QAAQ,YAAR,CAAd;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,SAASE,GAAT,CAAaC,SAAb,EAAwB;AACtB,MAAMC,WAAWD,WAAjB;AACA,MAAME,KAAKD,SAASE,IAAT,EAAX;AACA,MAAMC,UAAUF,GAAGG,KAAnB;;AAEAD,UAAQE,IAAR,CAAa,gBAAQ;AACnB,QAAMC,MAAMN,SAASE,IAAT,CAAcK,IAAd,CAAZ;AACA,QAAMC,WAAWF,IAAIF,KAArB;;AAEAI,aAASH,IAAT,CAAc,iBAAS;AACrBL,eAASE,IAAT,CAAcO,KAAd;AACD,KAFD;AAGD,GAPD;AAQD;;AAEDX,6CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACgBD,MAAM,yCAAN,CADhB;;AAAA;AACIa,aADJ;AAAA;AAAA,iBAGkBA,IAAIC,IAAJ,EAHlB;;AAAA;AAGIC,eAHJ;AAIIC,iBAJJ,GAIcD,MAAMC,OAJpB;;;AAMFC,kBAAQC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;;AANE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAJ","file":"co.js","sourcesContent":["const co = require('co')\nconst fetch = require('node-fetch')\n\n// co包裹，自动执行完毕\n// co(function *() {\n//   const res = yield fetch('https://api.douban.com/v2/movie/1291843')\n\n//   const movie = yield res.json()\n//   const summary = movie.summary\n\n//   console.log('summary', summary)\n// })\n\n\n// - 2 -\n// 模拟co\n// 把 迭代器generator 迭代成 promise\n// co支持：对象，数组，promise，generator，xx函数\n// 不支持：字符串、布尔值\nfunction run(generator) {\n  const iterator = generator()\n  const it = iterator.next()\n  const promise = it.value\n\n  promise.then(data => {\n    const it2 = iterator.next(data)\n    const promise2 = it2.value\n\n    promise2.then(data2 => {\n      iterator.next(data2)\n    })\n  })\n}\n\nrun(function *() {\n  const res = yield fetch('https://api.douban.com/v2/movie/1291843')\n\n  const movie = yield res.json()\n  const summary = movie.summary\n\n  console.log('summary', summary)\n})"]}